// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Container
        text={true}
>
        <Header
                as="h2"
                color="teal"
                icon={true}
                textAlign="center"
        >
                <Icon
                        as="i"
                        circular={true}
                        name="unordered list"
                />
                <HeaderContent>
                        Todoista
                </HeaderContent>
        </Header>
        <Divider
                hidden={true}
                section={true}
        />
        <Footer />
        <Divider
                section={true}
        />
        <withRouter(Connect(VisibleTodoList)) />
        <Divider
                section={true}
        />
        <Connect(AddTodo) />
</Container>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Header
            as="h2"
            color="teal"
            icon={true}
            textAlign="center"
>
            <Icon
                        as="i"
                        circular={true}
                        name="unordered list"
            />
            <HeaderContent>
                        Todoista
            </HeaderContent>
</Header>,
          <Divider
            hidden={true}
            section={true}
/>,
          <Footer />,
          <Divider
            section={true}
/>,
          <withRouter(Connect(VisibleTodoList)) />,
          <Divider
            section={true}
/>,
          <Connect(AddTodo) />,
        ],
        "text": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "h2",
            "children": Array [
              <Icon
                as="i"
                circular={true}
                name="unordered list"
/>,
              <HeaderContent>
                Todoista
</HeaderContent>,
            ],
            "color": "teal",
            "icon": true,
            "textAlign": "center",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "i",
                "circular": true,
                "name": "unordered list",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Todoista",
              },
              "ref": null,
              "rendered": "Todoista",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "hidden": true,
            "section": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "section": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "section": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Container
          text={true}
>
          <Header
                    as="h2"
                    color="teal"
                    icon={true}
                    textAlign="center"
          >
                    <Icon
                              as="i"
                              circular={true}
                              name="unordered list"
                    />
                    <HeaderContent>
                              Todoista
                    </HeaderContent>
          </Header>
          <Divider
                    hidden={true}
                    section={true}
          />
          <Footer />
          <Divider
                    section={true}
          />
          <withRouter(Connect(VisibleTodoList)) />
          <Divider
                    section={true}
          />
          <Connect(AddTodo) />
</Container>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Header
              as="h2"
              color="teal"
              icon={true}
              textAlign="center"
>
              <Icon
                            as="i"
                            circular={true}
                            name="unordered list"
              />
              <HeaderContent>
                            Todoista
              </HeaderContent>
</Header>,
            <Divider
              hidden={true}
              section={true}
/>,
            <Footer />,
            <Divider
              section={true}
/>,
            <withRouter(Connect(VisibleTodoList)) />,
            <Divider
              section={true}
/>,
            <Connect(AddTodo) />,
          ],
          "text": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "h2",
              "children": Array [
                <Icon
                  as="i"
                  circular={true}
                  name="unordered list"
/>,
                <HeaderContent>
                  Todoista
</HeaderContent>,
              ],
              "color": "teal",
              "icon": true,
              "textAlign": "center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "i",
                  "circular": true,
                  "name": "unordered list",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Todoista",
                },
                "ref": null,
                "rendered": "Todoista",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "hidden": true,
              "section": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "section": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "section": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
